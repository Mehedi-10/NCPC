#include <bits/stdc++.h>

using namespace std;
#define dtype int
#define endl "\n"

int main() {
    ios_base::sync_with_stdio(false), cin.tie(nullptr);
    dtype t, te = 0;
    cin >> t;
    while (t--) {
        dtype n, m, pre, q, x;
        //input
        cin >> n >> m;
        vector<dtype> vc(n), diff;
        for (auto &i : vc) {
            cin >> i;
        }
        //sorting input
        sort(vc.begin(), vc.end());
        //calculating difference
        pre = 0;
        for (auto &i : vc) {
            diff.emplace_back(i - pre);
            pre = i;
        }
        diff.emplace_back(m - pre);
        //sorting diff. in descending
        sort(diff.rbegin(), diff.rend());

        vector<dtype> dp(diff[0] + 1, 1);
        dp[0] = INT_MAX;
        dp[diff[0]] = 0;
        // calculating min numbers of stones needed to make max jump length equal i and storing
        for (int i = 1; i < diff[0]; ++i) {
            dtype ans = 0;
            for (int j = 0; j < diff.size() && diff[j]>i; ++j) {
                ans += (diff[j] - 1) / i;
            }
            dp[i] = ans;
            //if ans==1 then break bcz we already know max jump length for zero stone
            if (ans == 1)
                break;
        }

        // for (int i = 0; i < dp.size(); ++i) {
        //     cout<<i<<" "<<dp[i]<<endl;
        // }

        //output
        cout << "Case " << ++te << ":" << endl;
        cin >> q;
        while (q--) {
            cin >> x;
            auto p = lower_bound(dp.begin(), dp.end(), x, greater<>());
            cout << p - dp.begin() << endl;
        }
    }

    return 0;
}
/*
1
2 1000000
2 100
3
1 2 30
1
3 100
5 10 29
3
1 2 33
 */
